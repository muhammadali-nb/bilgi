import type { BidTabData, IBid } from '../types';

export const useBidFields = (bid: IBid['properties']): BidTabData => {
  return {
    main: {
      targetCreditAmount: bid.targetCreditAmount,
      youngSpecialistsCount: bid.youngSpecialistsCount,
      gracePeriod: bid.gracePeriod,
      creditReturnPeriodYears: bid.creditReturnPeriodYears,
      creditSecurityType: bid.creditSecurityType,
      plannedCreditReturnSchedule: bid.plannedCreditReturnSchedule,
      creditReturnFrequency: bid.creditReturnFrequency,
      projectDescription: bid.projectDescription,
      ownFundsAmount: bid.ownFundsAmount,
      organizationSocialIndicators: bid.organizationSocialIndicators,
      contactPersonFullName: bid.contactPersonFullName,
      mobilePhone: bid.mobilePhone,
      workPhone: bid.workPhone,
      homePhone: bid.homePhone,
      email: bid.email,
      directorFullName: bid.directorFullName,
      applicantQuestionnaireDocumentUrl: bid.applicantQuestionnaireDocumentUrl,
    },
    financial: {
      financialStatements: bid.financialStatements,
      taxDebtAbsenceCertificate: bid.taxDebtAbsenceCertificate,
      bankAccountCertificate: bid.bankAccountCertificate,
      projectBusinessPlan: bid.projectBusinessPlan,
      targetFundSpendingEstimate: bid.targetFundSpendingEstimate,
      leaseAgreement: bid.leaseAgreement,
    },
    security: {
      landCadastrePassport: bid.landCadastrePassport,
      ownershipDocuments: bid.ownershipDocuments,
      realEstateValuationReport: bid.realEstateValuationReport,
      vehicleRegistrationCertificate: bid.vehicleRegistrationCertificate,
      vehicleValuationReport: bid.vehicleValuationReport,
      shareholderResolution: bid.shareholderResolution,
      guarantorFinancialAndFoundingDocs: bid.guarantorFinancialAndFoundingDocs,
      auditorOpinion: bid.auditorOpinion,
      guarantorLetter: bid.guarantorLetter,
      insuranceCompanyLetter: bid.insuranceCompanyLetter,
    },
    collateralDocuments: {
      certificateOfStateRegistration: bid.certificateOfStateRegistration,
      organizationCharter: bid.organizationCharter,
      foundingAgreement: bid.foundingAgreement,
      foundersDecisionToOpenOrganization: bid.foundersDecisionToOpenOrganization,
      foundersDecisionOnTargetLoan: bid.foundersDecisionOnTargetLoan,
      orderOnTargetLoan: bid.orderOnTargetLoan,
      ceoAuthorityConfirmation: bid.ceoAuthorityConfirmation,
      chiefAccountantAuthorityConfirmation: bid.chiefAccountantAuthorityConfirmation,
      ceoPassport: bid.ceoPassport,
      chiefAccountantPassport: bid.chiefAccountantPassport,
      itParkResidencyCertificate: bid.itParkResidencyCertificate,
      educationActivityPermission: bid.educationActivityPermission,
    },
  };
};
